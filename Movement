using UnityEngine;
using System;
using TMPro;

public class Movement : MonoBehaviour
{
    //Publicly declaring variables so they can be assigned/edited in Unity Editor.
    public GameObject playerQuad = new GameObject();
    public TMP_Text currentScore;
    public TMP_Text timeTaken;
    public TMP_Text totalScore;
    public TMP_Text seed;
    public float speed = 1;

    float stopWatch;

    void Start()
    {
        //Sets the userQuad's position to the top left tile.
        playerQuad.transform.position = new Vector3(-4.8f, 4.8f, -1);
        //Retrieves the map being used
        string[] map = getMap();
        //Gets the value of the starting tile
        string mapLine = map[0];
        prevTile = mapLine[0];
    }

    int totalTime = 0;
    bool finished = false;
    void Update()
    {
        //Every frame, the user's position is checked. It also checks for key presses to move the playerQuad.
        Vector3 pos = playerQuad.transform.position;

        //(5, -5) is the co-ord of the bottom right tile.
        if (Math.Round(pos[0]) == 5 && Math.Round(pos[1]) == -5)
        {
            //The total score is calcualted by adding the total movement and the total time taken. It's then displayed
            int score = totalMoved + totalTime;
            totalScore.text = $"Total Score: {score}";
            /*A one time check to see if the player has reached the bottom right square. By only checking once, it stops the value being
              stored multiple times onto the database. */
            if (finished == false)
            {
                mapFinished(score);
                finished = true;
            }
            return;
        }
        else
        {
            //If the map isn't comepleted, a second is added using the following code and then displayed to the player.
            stopWatch += Time.deltaTime * speed;
            string minutes = Mathf.Floor((stopWatch % 3600) / 60).ToString("00");
            string seconds = (stopWatch % 60).ToString("00");
            timeTaken.text = $"Current Time: {minutes}:{seconds}";
            totalTime = (Convert.ToInt32(minutes) * 60) + Convert.ToInt32(seconds);
            /*The if statement detects the key being pressed and moves the player the appropriate distance. It also sends the current
              position to a different function as well as the map.*/
            if (Input.GetKeyDown("s"))
            {
                pos[1] = pos[1] - 0.4f;
                playerQuad.transform.position = pos;
                moved(pos, getMap());
            }
            else if (Input.GetKeyDown("d"))
            {
                pos[0] = pos[0] + 0.4f;
                playerQuad.transform.position = pos;
                moved(pos, getMap());
            }
            else if (Input.GetKeyDown("w"))
            {
                pos[1] = pos[1] + 0.4f;
                playerQuad.transform.position = pos;
                moved(pos, getMap());
            }
            else if (Input.GetKeyDown("a"))
            {
                pos[0] = pos[0] - 0.4f;
                playerQuad.transform.position = pos;
                moved(pos, getMap());
            }
        }
        
    }

    char prevTile = ' ';
    int totalMoved = 0;

    /*This function takes the user's position and figures out the current tile they are on. From there, it calls the AdjacencyList
      function that calculates the movement cost. It then adds these numbers together with the current score and displays the 
      overall results*/
    void moved(Vector3 pos, string[] map)
    {
        float x = (pos[0] - -4.8f) / 0.4f;
        float y = -(pos[1] - 4.8f) / 0.4f;
        
        string mapLine = map[Convert.ToInt32(y)];
        char tile = mapLine[Convert.ToInt32(x)];

        totalMoved += AdjacencyList.GetWeights(prevTile, tile);
        currentScore.text = $"Current Move Score: {totalMoved}";
        
        prevTile = tile;
    }

    //Fetches the generated map calculated in the Perlin Noise Script
    string[] getMap()
    {
        return PerlinNoise.mapArr;
    }

    void mapFinished(int score)
    {
        //Creates an instance of the Database script
        Database database = new Database();
        //Adds the user's score to the database, calling their saved userID
        database.addMapScore(seed.text, CurrentUser.userID, score);
    }
}
